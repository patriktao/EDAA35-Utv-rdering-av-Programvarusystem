return(barplot(unlist(df[2]), names.arg=unlist(df[1])))
}
contributors(file, 4)
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(df)
#read.delim("newfile.txt", header = TRUE, sep = "|")
contributors <- function(file, n){
df <- data.frame()
allNames <- unique(file$user)
for(i in 1:(length(allNames))){
#we count the total rows that is in the filea
totalRows <- nrow(file[file$user == unique(file$user)[i],])
#create data frame
L <- c(unique(file$user)[i], totalRows)
#add it into the frame
df <- rbind(df, L)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(df)
}
contributors(3, 4)
contributors(newFile, 4)
contributors(newFile, 10)
contributors(newFile, 44)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#we count the total rows that is in the filea
totalRows <- nrow(fileRead[fileRead$user == unique(fileRead$user)[i],])
#create data frame
L <- c(unique(fileRead$user)[i], totalRows)
#add it into the frame
df <- rbind(df, L)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(df)
}
contributors("newfile.txt", 4)
contributors("newfile.txt", 10)
newFile
newFile[newFile$user == "ezust"]
newFile[newFile$user == "ezust",]
newFile[newFile$user == "ezust"][1]
newFile[newFile$user == "ezust"]
newFile[newFile$user == "ezust"]
newFile[newFile$user == "ezust",]
newFile[,newFile$user == "ezust"]
newFile[newFile$user == "ezust",]
newFile[newFile$user == "ezust",]
newFile[newFile$user == " ezust ",]
newFile[newFile$user == " ezust "]
newFile[newFile$user == " ezust ",]
newFile[newFile$user == " ezust ",]
newFile[newFile$user == " ezust ",]$date
max(newFile[newFile$user == " ezust ",]$date)
min(newFile[newFile$user == " ezust ",]$date)
min(newFile[newFile$user == " ezust ",]$date)
return(da)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[order(da$Date),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[order(-da$Date),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
da <- da[rev(order(as.Date(da$Date, format="%m/%d/%Y"))),]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[rev(order(as.Date(da$Date, format="%m/%d/%Y"))),]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
da <- da[(order(as.Date(da$Date, format="%m/%d/%Y"))),]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[(order(as.Date(da$Date, format="%m/%d/%Y"))),]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
da <- da[order(as.Date(da$Date, format="%m/%d/%Y")),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[order(as.Date(da$Date, format="%m/%d/%Y")),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
max(newFile[newFile$user == " ezust ",]$date)
as.Date(max(newFile[newFile$user == " ezust ",]$date), format = %m/%d/%y")
as.Date(max(newFile[newFile$user == " ezust ",]$date), format = %m/%d/%y")
substring(max(newFile[newFile$user == " ezust ",]$date))
substring(max(newFile[newFile$user == " ezust ",]$date))
substring
substring()
substring("hej")
substring("hej he")
substring("hej", first, last)
substring("hej", first, last=10000L)
substring("hej", first=0, last=10000L)
substring("hej hej", first=0, last=10000L)
substring("hej hej", first=0, last=10000L)
substring("hej hej", first=4, last=10000L)
substring(max(newFile[newFile$user == " ezust ",]$date), first=4, last=10000L)
substring(max(newFile[newFile$user == " ezust ",]$date), first=4, last=10)
substring(max(newFile[newFile$user == " ezust ",]$date), first=0, last=10)
substring(max(newFile[newFile$user == " ezust ",]$date), first=0, last=12)
substring(max(newFile[newFile$user == " ezust ",]$date), first=1, last=12)
substring(max(newFile[newFile$user == " ezust ",]$date), first=1, last=11)
substring(max(newFile[newFile$user == " ezust ",]$date), first=2, last=11)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#substirng
date <- substring(date, first=2, last=11)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[order(as.Date(da$Date, format="%m/%d/%Y")),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
da <- da[rev(order(as.Date(da$Date, format="%m/%d/%Y"))),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#substirng
date <- substring(date, first=2, last=11)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[rev(order(as.Date(da$Date, format="%m/%d/%Y"))),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
contributors("newfile.txt", 5)
dateList <- contributors("newfile.txt", 5)
dateList[1]
dateList[1]
c(dateList[1], dateList[2])
c(dateList[1], dateList[2,])
c(dateList[1m], dateList[2,])
c(dateList[1n], dateList[2,])
c(dateList[1m], dateList[2,])
c(dateList[1,], dateList[2,])
c(dateList[1], dateList[2])
array(dateList[1], dateList[2])
array(dateList[1])
c(array(dateList[1]), array(dateList[2]))
c(array(dateList[1]), array(dateList[2]))[1]
c(array(dateList[1]), array(dateList[2]))[2]
data <- read.delim("newfile.txt", header = TRUE, sep = "|")
contributors("newfile.txt")
contributors("newfile.txt", n=5)
data <- c(15,15,13,15,12,11,15,13,17,24,16,18,15,4,16)
for (i in 1:(length(data))) {
#Here we loop through the different variables
col <- data[ ,i]
#All values which are under the threshold
nol <- col[col<threshold[i]]
#All values over the threshold
ol <- col[col>threshold[i]]
#Dataframe
L <- c(colnames(data[i]),col[0], length(ol), mean(nol))
#combine the frame and data
df <- rbind(df, L)
}
#Change column names
colnames(df) <- c("Variable","NrPotentialOutliers", "MeanNoOutliers")
return(df)
analysePotentialOutliers <-function(data, threshold){
df <- data.frame()
for (i in 1:(length(data))) {
#Here we loop through the different variables
col <- data[ ,i]
#All values which are under the threshold
nol <- col[col<threshold[i]]
#All values over the threshold
ol <- col[col>threshold[i]]
#Dataframe
L <- c(colnames(data[i]),col[0], length(ol), mean(nol))
#combine the frame and data
df <- rbind(df, L)
}
#Change column names
colnames(df) <- c("Variable","NrPotentialOutliers", "MeanNoOutliers")
return(df)
}
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#substirng
date <- substring(date, first=2, last=11)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[rev(order(as.Date(da$Date, format="%m/%d/%Y"))),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
test <- c(15,15,13,15,12,11,15,13,17,24,16,18,15,4,16)
analysePotentialOutliers(test)
analysePotentialOutliers(test,3)
analysePotentialOutliers(test,1)
analysePotentialOutliers(test,1)
analysePotentialOutliers(test,13)
analysePotentialOutliers(test,13)
analysePotentialOutliers(data,1)
#combine the frame and data
df <- rbind(df, L)
for (i in 1:(length(data))) {
#Here we loop through the different variables
col <- data[,i]
#All values which are under the threshold
nol <- col[col<threshold[i]]
#All values over the threshold
ol <- col[col>threshold[i]]
#Dataframe
L <- c(colnames(data[i]),col[0], length(ol), mean(nol))
#combine the frame and data
df <- rbind(df, L)
}
#Change column names
colnames(df) <- c("Variable","NrPotentialOutliers", "MeanNoOutliers")
return(df)
analysePotentialOutliers <-function(data, threshold){
df <- data.frame()
for (i in 1:(length(data))) {
#Here we loop through the different variables
col <- data[,i]
#All values which are under the threshold
nol <- col[col<threshold[i]]
#All values over the threshold
ol <- col[col>threshold[i]]
#Dataframe
L <- c(colnames(data[i]),col[0], length(ol), mean(nol))
#combine the frame and data
df <- rbind(df, L)
}
#Change column names
colnames(df) <- c("Variable","NrPotentialOutliers", "MeanNoOutliers")
return(df)
}
contributors <- function(file, n){
fileRead <- read.delim(file, header = TRUE, sep = "|")
df <- data.frame()
da <- data.frame()
allNames <- unique(fileRead$user)
for(i in 1:(length(allNames))){
#name
name <- unique(fileRead$user)[i]
#most recent date
date <- max(fileRead[fileRead$user == name,]$date)
#substirng
date <- substring(date, first=2, last=11)
#total rows of commits
totalRows <- nrow(fileRead[fileRead$user == name,])
#create data frame
L <- c(name, totalRows)
N <- c(name, date)
#add it into the frame
df <- rbind(df, L)
da <- rbind(da, N)
}
#Column Names
colnames(df) <- c("Contributor", "Commits")
colnames(da) <- c("Contributor", "Date")
#convert to numreric vector for the commits
df$Commits <- as.numeric(as.character(df$Commits))
#Now we can sort based on commits
df <- df[order(-df$Commits),][1:n,]
da <- da[rev(order(as.Date(da$Date, format="%m/%d/%Y"))),][1:n,]
#Convert to Vector
barplot(unlist(df[2]), names.arg=unlist(df[1]))
return(da)
}
data <- newfile2.txt
data <- read.csv("newfile2.txt")
View(data)
data <- removeNa(read.csv("newfile2.txt"))
analysePotentialOutliers(data)
analysePotentialOutliers(data,1)
analysePotentialOutliers(data,3)
analysePotentialOutliers(data, 2)
analysePotentialOutliers(data, 10)
contributors(data)
